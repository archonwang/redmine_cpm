<div class="splitcontentleft">
	<fieldset>
		<legend><%=l(:"cpm.title_black_lists")%></legend>
		<p>
	    <label><%=l(:"cpm.label_ignored_users")%></label>
	    <%= select_tag 'settings[ignored_users]',
	        options_from_collection_for_select(User.all.sort_by{|u| u.login}, :id, :login, (@settings['ignored_users'] || [])),
	        :multiple => true,
	        :size => 10 %>
		    <p>
		    <%= check_box_tag 'settings[ignore_unselected_users]', true, @settings['ignore_unselected_users'].present? %>
		    <%=l(:"cpm.label_ignore_unselected")%>
			</p>
		</p>

		<p>
	    <label><%=l(:"cpm.label_ignored_groups")%></label>
	    <%= select_tag 'settings[ignored_groups]',
	        options_from_collection_for_select(Group.all.sort_by{|g| g.name}, :id, :name, (@settings['ignored_groups'] || [])),
	        :multiple => true,
	        :size => 10 %>
	       	<p>
		    <%= check_box_tag 'settings[ignore_unselected_groups]', true, @settings['ignore_unselected_groups'].present? %>
		    <%=l(:"cpm.label_ignore_unselected")%>
			</p>
		</p>

		<p>
	    <label><%=l(:"cpm.label_ignored_projects")%></label>
	    <%= select_tag 'settings[ignored_projects]',
	        options_from_collection_for_select(Project.all.sort_by{|p| p.name}, :id, :name, (@settings['ignored_projects'] || [])),
	        :multiple => true,
	        :size => 10 %>
	        <p>
		    <%= check_box_tag 'settings[ignore_unselected_projects]', true, @settings['ignore_unselected_projects'].present? %>
			<%=l(:"cpm.label_ignore_unselected")%>
			</p>
		</p>
	</fieldset>
	<fieldset>
		<legend><%=l(:label_project_plural)%></legend>
		<p>
		    <%= check_box_tag 'settings[add_subprojects]', true, @settings['add_subprojects'].present? %>
			<%=l(:"cpm.label_add_subprojects")%>
		</p>
	</fieldset>
	<fieldset>
		<legend><%=l(:"cpm.title_custom_fields")%></legend>
		<p>
	    <label><%=l(:"cpm.label_additional_info")%></label>
	    <%= select_tag 'settings[cmi_profile]',
	        options_from_collection_for_select(UserCustomField.all, :id, :name, (@settings['cmi_profile'] || [])), 
	        :include_blank => true
	    %>
		</p>
	</fieldset>
</div>
<div class="splitcontentright">
	<fieldset>
		<legend><%=l(:"cpm.title_search_filters")%></legend>
		<p>
	    <label><%=l(:"cpm.label_project_filters")%></label>
	    <%= select_tag 'settings[project_filters]',
	        options_from_collection_for_select(ProjectCustomField.where("field_format = 'list'").sort_by{|cf| cf.name}, :id, :name, (@settings['project_filters'] || [])),
	        :multiple => true,
	        :size => 10 %>
		</p>
		<p>
	    <label><%=l(:"cpm.label_default_active_filters")%></label>
	    <%= select_tag 'settings[default_active_filters]',
	        options_for_select(CPM::Filters::DEFAULT_FILTERS.map{|f| [l(("cpm.label_"+f).to_sym), f]}, (@settings['default_active_filters'] || [])),
	        :multiple => true,
	        :size => 10 %>
		</p>
	</fieldset>
	<fieldset>
		<legend><%=l(:"cpm.title_roles")%></legend>
		<p>
	    <label><%=l(:"cpm.label_project_manager_role")%></label>
	    <%= select_tag 'settings[project_manager_role]',
	        options_from_collection_for_select(Role.all, :id, :name, (@settings['project_manager_role'] || [])),
	        :multiple => true,
	        :size => 10 %>
		</p>
	</fieldset>
	<fieldset>
		<legend><%= check_box_tag 'settings[google_calendar]', true, @settings['google_calendar'].present? %><%= l(:"cpm.title_google_calendar_connect") %></legend>
		<p>
			<label><%=l(:"cpm.label_client_id")%></label>
	    	<%= text_field_tag 'settings[client_id]', @settings['client_id'] %>
		</p>
		<p>
			<label><%=l(:"cpm.label_client_secret")%></label>
	    	<%= text_field_tag 'settings[client_secret]', @settings['client_secret'] %>
		</p>
		<p>
			<label><%=l(:"cpm.label_calendar_id")%></label>
	    	<%= text_field_tag 'settings[calendar_id]', @settings['calendar_id'] %>
		</p>
		<p>
	    	<label><%=l(:"cpm.label_absence_project")%></label>
	    	<%= select_tag 'settings[absence_project]',
	        	options_from_collection_for_select(Project.all.sort_by{|p| p.name}, :id, :name, @settings['absence_project']) %>
		</p>
	</fieldset>

	<fieldset>
		<legend><%= l(:"cpm.title_dependent_plugins") %></legend>
		<div style="width:90%; margin-left:auto; margin-right:auto;">
	    	<%= l(:"cpm.text_dependent_plugins") %>
	    </div>
		<p>
			<label><%=l(:"cpm.label_plugin_cmi")%></label>
	    	<%= check_box_tag 'settings[plugin_cmi]', true, @settings['plugin_cmi'].present? %>
		</p>
		<p>
			<label><%=l(:"cpm.label_plugin_knowledge_manager")%></label>
	    	<%= check_box_tag 'settings[plugin_knowledge_manager]', true, @settings['plugin_knowledge_manager'].present? %>
		</p>
	</fieldset>
</div>
<div style="clear: both;"></div>

<script>
$(document).ready(function(){
	// When any black list has been changed, show a confirmation window before submit
	$("input[name='commit']").click(function(){
		changes = false;
		new_usr_bl = $('select#settings_ignored_users').val();
		act_usr_bl = <%=@settings['ignored_users'].to_json.html_safe%>;
		new_grp_bl = $('select#settings_ignored_groups').val();
		act_grp_bl = <%=@settings['ignored_groups'].to_json.html_safe%>;
		new_prj_bl = $('select#settings_ignored_projects').val();
		act_prj_bl = <%=@settings['ignored_projects'].to_json.html_safe%>;

		message = "<%=l(:'cpm.label_black_list_changes')%>:\r\n";

		if (!array_equals(new_usr_bl,act_usr_bl)){
			changes = true;
			message += "\t- <%=l(:'cpm.label_ignored_users')%>\r\n";
		}
		if (!array_equals(new_grp_bl,act_grp_bl)){
			changes = true;
			message += "\t- <%=l(:'cpm.label_ignored_groups')%>\r\n";
		}
		if (!array_equals(new_prj_bl,act_prj_bl)){
			changes = true;
			message += "\t- <%=l(:'cpm.label_ignored_projects')%>\r\n";
		}

		message += "<%=l(:'cpm.label_save_changes_confirm')%>";

		if (changes){
			return confirm(message);
		}
	});
});

// Check if two arrays have the same elements
function array_equals(arr1,arr2){
	arr1 = arr1 || [];
	arr2 = arr2 || [];
	equals = true;
	
	$.each(arr1,function(i,element){
		if ($.inArray(element,arr2)<0){
			equals = false;
		}
	});

	$.each(arr2,function(i,element){
		if ($.inArray(element,arr1)<0){
			equals = false;
		}
	});
	
	return equals;
}
</script>